package TGEU;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Scene;
import javafx.scene.chart.PieChart;
import javafx.scene.control.Button;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

public class MyGymController  implements Initializable{
	private static Stage stage;
	private static Scene home;
	
	@FXML
	private Button homeButton;
	@FXML
	private PieChart chartOfPie;
	//gymequip machineusage GED
	
	public void gymEquip() throws Exception{
		Connection c = null;
		try{
			String url = "jdbc:mysql:192.241.213.248/GED";
	        String username = "allen3just";
	        String password = "Justanswer30!";
	        
	        c = DriverManager.getConnection( url, username, password );
	        Statement stmt = c.createStatement();
	        ResultSet rs = stmt.executeQuery( "select * from gymequip;" );
	        
	        while( rs.next() ){
            	
                GymEquipment equipment = new GymEquipment( rs.getInt( "id" ),
                    rs.getString( "name" ), rs.getInt( "numb" ));
                
                //adds strikethrough for completed status and checks if archive button is pressed
                if(todo.getStatus().equals("Complete")){
                	todo.setDescription("<s>" + todo.getDescription() + "</s>");
                	
                	
                	if(request.getParameter("archive") != null){
                		todo.setStatus("Archived");
                		todo.setToggle("Not Complete");
                	}
                }
                
                //checks toggle
                if(todo.getStatus().equals("Complete"))
                	todo.setToggle("Not Completed");
                else if(todo.getStatus().equals("Open"))
                	todo.setToggle("Completed");
                else
                	todo.setToggle("Not Completed");
                
                todos.add( todo );
            }
		}
		catch( SQLException e ){
	        throw new Exception( e );
	    }
	    finally{
	        try{
	            if( c != null ) c.close();
	        }
	        catch( SQLException e ){
	            throw new Exception( e );
	        }
	    }
		
		
	}
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		ObservableList<PieChart.Data> pieChartData =
	            FXCollections.observableArrayList(
	            new PieChart.Data("Cycling Machine (3)", 3),
	            new PieChart.Data("Tread Mill (3)", 2),
	            new PieChart.Data("Stair Master (2)", 2),
	            new PieChart.Data("Elliptical Machine(3)", 3),
				new PieChart.Data("Free (2)", 2));
	    chartOfPie.setData(pieChartData);
	    chartOfPie.setLabelsVisible(false);
	    chartOfPie.setLegendVisible(true);
	}

    public static void setStage(Stage s) {
        stage = s;
    }
    public static void setHome(Scene h) {
        home = h;
    }
    
	public void login(){
		System.out.println("LOG ME IN BRO!");
		
		try {
			Pane pane = FXMLLoader.load(getClass().getResource("MyGym.fxml"));
			stage.setScene(new Scene(pane, 350, 500));
		} catch (IOException e) {
			System.out.println("Nope.");
		}
	}
	
	public void toHome(){
		stage.setScene(home);
	}
	
	

	
}

